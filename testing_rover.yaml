trigger:
  branches:
    include:
    - main

variables:
- name: Infra_Env
  value: Infrastructure

parameters:
- name: destroy
  default: false
  values:
  - true
  - false

stages:
- stage: ValidateStage
  displayName: Validate Stage
  jobs:
  - job: Validatejob
    continueOnError: false
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: PublishPipelineArtifact@1
      displayName: PublishArtefacts
      inputs:
        targetPath: '$(System.DefaultWorkingDirectory)'
        artifact: 'terraform-artefacts'
        publishLocation: 'pipeline'
      
    - task: TerraformInstaller@0
      displayName: Install Terraform
      inputs:
        terraformVersion: 'latest'
    - task: TerraformCLI@0
      displayName: Terraform first Init
      inputs:
        command: 'init'
        backendType: 'azurerm'
        backendServiceArm: 'terraform-visualizer-sc'
        backendAzureRmResourceGroupName: 'abin-tfstg-rg'
        backendAzureRmStorageAccountName: 'abintfstateact'
        backendAzureRmContainerName: 'tfstatefiles'
        backendAzureRmKey: 'visualizerabin-tfstate'
        allowTelemetryCollection: false
    - task: TerraformCLI@0
      displayName: Terraform Validate
      inputs:
        command: 'validate'
        allowTelemetryCollection: false

- stage: DeployInfra
  displayName: Deploy Infrastructure
  jobs:
  - deployment: DeployInfra
    displayName: Deploy Infrastructure
    pool:
      vmImage: ubuntu-latest
    environment:
      name: $(Infra_Env)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: TerraformCLI@0
            displayName: Terraform Init 2
            inputs:
              command: 'init'
              workingDirectory: '$(Pipeline.Workspace)/terraform-artefacts'
              backendType: 'azurerm'
              backendServiceArm: 'terraform-visualizer-sc'
              ensureBackend: true
              backendAzureRmResourceGroupName: 'abin-tfstg-rg'
              backendAzureRmResourceGroupLocation: 'Central US'
              backendAzureRmStorageAccountName: 'abintfstateact'
              backendAzureRmContainerName: 'tfstatefiles'
              backendAzureRmKey: 'visualizerabin-tfstate'
              allowTelemetryCollection: false
          
          - task: TerraformCLI@0
            displayName: Terraform Plan
            inputs:
              command: 'plan'
              workingDirectory: '$(Pipeline.Workspace)/terraform-artefacts'
              environmentServiceName: 'terraform-visualizer-sc'
              allowTelemetryCollection: false
              
          - bash: ls -lrt $(Pipeline.Workspace)/terraform-artefacts
          - task: Bash@3
            inputs:
              filePath: '$(Pipeline.Workspace)/terraform-artefacts/rover.sh'
          